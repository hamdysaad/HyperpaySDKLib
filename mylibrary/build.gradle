apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


apply plugin: "maven-publish"

configurations.maybeCreate("default")
def publishArtifact = artifacts.add("default", file('libs/oppwa.mobile-2.49.0.aar'))

publishing {
    publications {
        aar(MavenPublication) {
            groupId = 'com.shgardi.base'
            artifactId = 'shgardiSDK'
            version = '1.0.0'
            artifact publishArtifact
        }
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    def QA = 1

    flavorDimensions "developer"

    productFlavors.all {
        QA = 0
        buildConfigField "int", "QA", "" + QA
    }
    productFlavors {
        dev {
            dimension "developer"
            QA = 0
            buildConfigField "int", "QA", "" + QA
        }
        staging {
            dimension "developer"
            QA = 1
            buildConfigField "int", "QA", "" + QA
        }
        prod {
            dimension "developer"
            QA = 2
            buildConfigField "int", 'QA', "" + QA
        }

    }
}

repositories {
    google()
    jcenter()

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation project(path: ':oppwa.mobile-2.49.0')

    implementation(name:'oppwa.mobile-2.49.0', ext:'aar')


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'com.google.android.gms:play-services-wallet:16.0.1'

}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.javaDirectories
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}

group='com.shgardi.base'
version = '1.0.0'

if (android.productFlavors.size() > 0) {
    android.libraryVariants.all { variant ->

        if (variant.name.toLowerCase().contains("debug")) {
            return
        }

        def bundleTask = tasks["bundle${variant.name.capitalize()}Aar"]

        artifacts {
            archives(bundleTask.archivePath) {
                classifier variant.flavorName
                builtBy bundleTask
                name = project.name
            }
        }

    }
}